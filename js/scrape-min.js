const uploadSection=document.getElementById("uploadSection"),fileInput=document.getElementById("zipInput"),output=document.getElementById("output"),loader=document.getElementById("loader");let mainError=document.getElementById("mainError");const hintDesktop=document.getElementById("hintDesktop"),hintMobile=document.getElementById("hintMobile");hintDesktop.addEventListener("click",(()=>{document.getElementById("instructionsDesktop").scrollIntoView({behavior:"smooth"})})),hintMobile.addEventListener("click",(()=>{document.getElementById("instructionsMobile").scrollIntoView({behavior:"smooth"})}));let isOpening=!1;async function handleFile(e){try{const t=e.target.files[0];if(!t)return;const n=new JSZip,l=await n.loadAsync(t),o=[],i=[];let a=!1;for(const e in l.files)if(e.startsWith("connections/followers_and_following/followers_")){const t=await l.files[e].async("string"),n=JSON.parse(t);o.push(...extractUsernames(n)),a=!0}if(!a)throw new Error("Could not find followers JSON file. Please upload the correct .zip file.");const s="connections/followers_and_following/following.json";if(!l.files[s])throw new Error("Could not find following JSON file. Please upload the correct .zip file.");{const e=await l.files[s].async("string"),t=JSON.parse(e);i.push(...extractUsernames(t))}mainError.innerHTML="";let r=i.filter((e=>!o.some((t=>t.username===e.username)))),d=o.filter((e=>!i.some((t=>t.username===e.username))));const c=e=>[...new Map(e.map((e=>[e.username,e]))).values()].sort(((e,t)=>e.username.localeCompare(t.username)));r=c(r),d=c(d),uploadSection.style.display="none",loader.style.display="flex",setTimeout((()=>{renderResults(r,d),loader.style.display="none"}),1800)}catch(e){mainError.innerHTML=e}}function extractUsernames(e){if(Array.isArray(e))return e.filter((e=>e.string_list_data&&e.string_list_data.length)).map((e=>({username:e.string_list_data[0].value,href:e.string_list_data[0].href})));for(const t in e){const n=e[t];if(Array.isArray(n))return n.filter((e=>e.string_list_data&&e.string_list_data.length)).map((e=>({username:e.string_list_data[0].value||e.title||"",href:e.string_list_data[0].href})))}return[]}function renderResults(e,t){output.innerHTML=`\n    <div class="result-block fade-in">\n      <h2>Not Following You Back (${e.length})</h2>\n      <ul>\n        ${e.map((e=>`<li><a href="${e.href}" target="_blank">${e.username}</a></li>`)).join("")}\n      </ul>\n    </div>\n\n    <div class="result-block fade-in">\n      <h2>You Don’t Follow Back (${t.length})</h2>\n      <ul>\n        ${t.map((e=>`<li><a href="${e.href}" target="_blank">${e.username}</a></li>`)).join("")}\n      </ul>\n    </div>\n  `,document.getElementById("actions").style.display="flex",document.getElementById("downloadCsvBtn").addEventListener("click",(()=>{downloadCSV(e,t)})),document.getElementById("downloadCsvBtn").style.display="block",document.getElementById("resetBtn").addEventListener("click",(()=>{output.innerHTML="",uploadSection.style.display="flex",document.getElementById("downloadCsvBtn").style.display="none",document.getElementById("resetBtn").style.display="none",document.getElementById("actions").style.display="none"})),document.getElementById("resetBtn").style.display="block"}function downloadCSV(e,t){let n="data:text/csv;charset=utf-8,";n+="Not Following You Back (username),Not Following You Back (link),You Don’t Follow Back (username),You Don’t Follow Back (link)\n";const l=Math.max(e.length,t.length);for(let o=0;o<l;o++){n+=`${e[o]?.username||""},${e[o]?.href||""},${t[o]?.username||""},${t[o]?.href||""}\n`}const o=encodeURI(n),i=document.createElement("a");i.setAttribute("href",o),i.setAttribute("download","instagram_followers_report.csv"),document.body.appendChild(i),i.click(),document.body.removeChild(i)}uploadSection.addEventListener("click",(e=>{isOpening||(isOpening=!0,fileInput.click(),setTimeout((()=>isOpening=!1),500))})),uploadSection.addEventListener("dragover",(e=>{e.preventDefault(),uploadSection.classList.add("dragover")})),uploadSection.addEventListener("dragleave",(()=>{uploadSection.classList.remove("dragover")})),uploadSection.addEventListener("drop",(e=>{e.preventDefault(),uploadSection.classList.remove("dragover"),fileInput.files=e.dataTransfer.files,handleFile({target:fileInput}),fileInput.value=""})),fileInput.addEventListener("change",(e=>{handleFile(e),fileInput.value=""}));